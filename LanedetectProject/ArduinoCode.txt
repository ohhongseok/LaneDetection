//Arduino IDE
//Serial communication을 통해 넘어온 값을 통해 일정 범위에 있을시 각도 조향
//코드부분 ARDUINO IDE에서 업로드 후, Port Num 확인 후, 시리얼 통신을 주관하는
//cpp 파일에 해당 포트번호 작성,(주의 : char * 형으로 형변환후에 작성해야함)
//라이다 라이브러리 추가
#include<Servo.h>
#include <DFRobot_TFmini.h> 
int E2 = 9;  

int servoPin = 5;

int pwmpin=A0; //가변저항핀
int pwmval;

// 라이다 부분
//RX, TX, 디지털핀을 시리얼 포트로 사용하기 위함(시리얼포트 확장)
SoftwareSerial mySerial(8, 7); //myserial 객체 선언, 시리얼 통신 만듦 
DFRobot_TFmini  TFmini; //라이다 객체 선언
uint16_t distance;   // 거리와 강도를 담는 변수

Servo servo;

//시리얼 통신을 위한 코드부
int buffer[20];
int bufferIndex=0;

int degree;

void setup() {
  servo.attach(servoPin);
  pinMode(E2,OUTPUT);
  Serial.begin(115200);
  TFmini.begin(mySerial);

}

void loop() {
  if (Serial.available() > 0) {// 데이터를 입력 받았을 경우


    //기존 코드부분
    if (TFmini.measure()) {                  // 거리와 신호의 강도를 측정합니다. 성공하면 을 반환하여 if문이 작동합니다.
    distance = TFmini.getDistance();       // 거리값을 cm단위로 불러옵니다.
    Serial.print("Distance = ");
    Serial.print(distance);
    Serial.println("cm");
    if(distance>=15)
    {
      buffer[bufferIndex] = Serial.read(); // 입력 데이터를 받고, buffer에 저장   
      if (buffer[bufferIndex]>110) //왼쪽으로 모터 꺾기
      {  
        buffer[bufferIndex] = 0;                                        
        degree=buffer[bufferIndex]-90;
        servo.write(85);
        /*
        pwmval=analogRead(pwmpin);
        pwmval=map(pwmval,0,1023,0,255);
        analogWrite(E2,pwmval); 
        */
        analogWrite(E2,255); 
        bufferIndex = 0;
                                           
      }
      else if (buffer[bufferIndex] < 90) { //오른쪽으로 모터 꺾기
        buffer[bufferIndex] = 0;                                        
        degree=buffer[bufferIndex]-90;
        servo.write(105);
        /*
        pwmval=analogRead(pwmpin);
        pwmval=map(pwmval,0,1023,0,255);
        analogWrite(E2,pwmval); 
        */
        analogWrite(E2,255); 
        bufferIndex = 0;                                                 
      }
      else if ((buffer[bufferIndex]>=90)&&(buffer[bufferIndex]<=110)) { //직진 
        buffer[bufferIndex] = 0;                                        
        servo.write(95);
        /*
        pwmval=analogRead(pwmpin);
        pwmval=map(pwmval,0,1023,0,255);
        analogWrite(E2,pwmval); 
        */
        analogWrite(E2,255); 
        bufferIndex = 0;                                                 
      }
      else {
        bufferIndex++;    // 배열을 초기화
        bufferIndex = bufferIndex%20;   //인덱스 번호가 20을 넘어갈 경우 다시 0부터 시작할 수 있게 나머지 값으로 인덱스 설정                  
      }
    }
    else
    { 
      analogWrite(E2,0); 
    }
  }
  //기존 코드부분 끝
} 
  delay(100);
}